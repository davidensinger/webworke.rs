// ==========================================================================
//
//  Images
//
// ==========================================================================


img {
  border: 0; // Removes border when inside 'a' element in IE6/7/8/9, FF3
  max-width: 100%;
  width: auto;
  vertical-align: middle;
}

// Non-fluid images
img[width],
img[height] {
  max-width: none;
}

// Images in figure elements.
figure > img {
  display: block;
}

// Addresses margin not present in IE6/7/8/9, S5, O11
figure {
  margin: 0;
}

// Corrects overflow displayed oddly in IE9
svg:not(:root) {
    overflow: hidden;
}


// -------------------------------------
//  Media width variations
// -------------------------------------

.media--1-4 {
  width: 25%;
}

.media--1-3 {
  width: 33.333%;
}

.media--1-2 {
  width: 50%;
}

.media--1-4,
.media--1-3,
.media--1-2 {

  // start breakpoints
  @include breakpoint(mobile-portrait-to-mobile-landscape) {
    width: 100%;
  }
}


// -------------------------------------
//  Media placement variations
// -------------------------------------

.media--right {
  float: right;
  @include rem(margin, $quarter-spacing-unit 0 $base-spacing-unit $base-spacing-unit);
}

.media--left {
  float: left;
  @include rem(margin, $quarter-spacing-unit $base-spacing-unit $base-spacing-unit 0);
}

// Remove float and center image on small mobile
.media--right,
.media--left {

  // start breakpoints
  @include breakpoint(mobile-portrait-to-mobile-landscape) {
    display: block;
    float: none;
    @include rem(margin, 0 auto $base-spacing-unit);
  }
}

.media--center {
  display: block;
  @include rem(margin, 0 auto $base-spacing-unit);
}


// -------------------------------------
//  Image with caption
// -------------------------------------

.imageCaption-figure {
}

.imageCaption-image {
  display: block;
  @include rem(margin, $quarter-spacing-unit 0);
}

.imageCaption-figcaption {
  @extend small;
}

.imageCaption-link {
  @extend %citation-small--link;
}


// -------------------------------------
//  Flex Embed
//  https://github.com/suitcss/flex-embed/blob/master/flex-embed.css
// -------------------------------------

// For use with media embeds – such as videos, slideshows, or even images –
// that need to retain a specific aspect ratio but adapt to the width of their
// containing element.
//
// Example HTML:
//
// <div class="flexEmbed flexEmbed--16by9">
//     <iframe class="flexEmbed-item" src="…"></iframe>
// </div>
//
// <div class="flexEmbed flexEmbed--16by9">
//     [iframe|object|embed|img]
// </div>

%flexEmbed {
  position: relative;
  overflow: hidden;
  height: 0;
  padding: 0;
}

// The use of an explicit descendant class makes this component more flexible.
// However, it will work automatically for iframes, embeds, and objects to
// account for times when you cannot modify the attributes for 3rd party widget
// code.

%flexEmbed-item {
  @include absolute(left 0 top 0);
  width: 100%;
  height: 100%;
}
